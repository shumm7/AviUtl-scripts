@TAåå›âÒì]
--track0:RX,-3600,3600,0
--track1:RY,-3600,3600,0
--track2:RZ,-3600,3600,0
--track3:ä‘äu,-100,100,1,1
--check0:îΩì],0

local trx, try, trz = obj.track0, obj.track1, obj.track2
local rx, ry, rz = obj.getvalue("rx"), obj.getvalue("ry"), obj.getvalue("rz")
local rev = obj.check0
local div = obj.track3
local n, m = obj.index, obj.num

if div<0 then
	rev = not(rev)
end
if rev then
	trx = -trx
	try = -try
	trz = -trz
end

if m==0 or m==1 or div==0 then
	obj.rx = trx + trx
	obj.ry = try + try
	obj.rz = trz + trz
elseif div>0 then
	local p = math.floor(n/div)+1
	if p%2==1 then
		obj.rx = rx + trx
		obj.ry = ry + try
		obj.rz = rz + trz
	elseif p%2==0 then
		obj.rx = rx - trx
		obj.ry = ry - try
		obj.rz = rz - trz
	end
elseif div<0 then
	local p = math.floor((m-n)/div)+1
	if p%2==1 then
		obj.rx = rx + trx
		obj.ry = ry + try
		obj.rz = rz + trz
	elseif p%2==0 then
		obj.rx = rx - trx
		obj.ry = ry - try
		obj.rz = rz - trz
	end
end


@TAåå›ç¿ïW
--track0:X,-3600,3600,0
--track1:Y,-3600,3600,0
--track2:Z,-3600,3600,0
--track3:ä‘äu,-100,100,1,1
--check0:îΩì],0

local tx, ty, tz = obj.track0, obj.track1, obj.track2
local x, y, z = obj.ox, obj.oy, obj.oz
local rev = obj.check0
local div = obj.track3
local n, m = obj.index, obj.num

if div<0 then
	rev = not(rev)
end
if rev then
	tx = -tx
	ty = -ty
	tz = -tz
end

if m==0 or m==1 or div==0 then
	obj.ox = x + tx
	obj.oy = y + ty
	obj.oz = z + tz
elseif div>0 then
	local p = math.floor(n/div)+1
	if p%2==1 then
		obj.ox = x + tx
		obj.oy = y + ty
		obj.oz = z + tz
	elseif p%2==0 then
		obj.ox = x - tx
		obj.oy = y - ty
		obj.oz = z - tz
	end
elseif div<0 then
	local p = math.floor((m-n)/div)+1
	if p%2==1 then
		obj.ox = x + tx
		obj.oy = y + ty
		obj.oz = z + tz
	elseif p%2==0 then
		obj.ox = x - tx
		obj.oy = y - ty
		obj.oz = z - tz
	end
end


@TAåå›íÜêSç¿ïW
--track0:CX,-3600,3600,0
--track1:CY,-3600,3600,0
--track2:CZ,-3600,3600,0
--track3:ä‘äu,-100,100,1,1
--check0:îΩì],0

local tcx, tcy, tcz = obj.track0, obj.track1, obj.track2
local cx, cy, cz = obj.cx, obj.cy, obj.cz
local rev = obj.check0
local div = obj.track3
local n, m = obj.index, obj.num

if div<0 then
	rev = not(rev)
end
if rev then
	tcx = -tcx
	tcy = -tcy
	tcz = -tcz
end

if m==0 or m==1 or div==0 then
	obj.cx = cx + tcx
	obj.cy = cy + tcy
	obj.cz = cz + tcz
elseif div>0 then
	local p = math.floor(n/div)+1
	if p%2==1 then
		obj.cx = cx + tcx
		obj.cy = cy + tcy
		obj.cz = cz + tcz
	elseif p%2==0 then
		obj.cx = cx - tcx
		obj.cy = cy - tcy
		obj.cz = cz - tcz
	end
elseif div<0 then
	local p = math.floor((m-n)/div)+1
	if p%2==1 then
		obj.cx = cx + tcx
		obj.cy = cy + tcy
		obj.cz = cz + tcz
	elseif p%2==0 then
		obj.cx = cx - tcx
		obj.cy = cy - tcy
		obj.cz = cz - tcz
	end
end


@TAåå›êF
--track0:ä‘äu,-100,100,1,1
--check0:îΩì],0
--dialog:êF1/col,local col1="0xffffff";êF2/col,local col2="0x000000"

local rev = obj.check0
local div = obj.track0
local n, m = obj.index, obj.num

if div<0 then
	rev = not(rev)
end
if rev then
	local temp = col2
	col2 = col1
	col1 = temp
end

if m==0 or m==1 or div==0 then
	obj.effect("íPêFâª", "ã≠Ç≥", 100, "ãPìxÇï€éùÇ∑ÇÈ", 0, "color", col1)
elseif div>0 then
	local p = math.floor(n/div)+1
	if p%2==1 then
		obj.effect("íPêFâª", "ã≠Ç≥", 100, "ãPìxÇï€éùÇ∑ÇÈ", 0, "color", col1)
	elseif p%2==0 then
		obj.effect("íPêFâª", "ã≠Ç≥", 100, "ãPìxÇï€éùÇ∑ÇÈ", 0, "color", col2)
	end
elseif div<0 then
	local p = math.floor((m-n)/div)+1
	if p%2==1 then
		obj.effect("íPêFâª", "ã≠Ç≥", 100, "ãPìxÇï€éùÇ∑ÇÈ", 0, "color", col1)
	elseif p%2==0 then
		obj.effect("íPêFâª", "ã≠Ç≥", 100, "ãPìxÇï€éùÇ∑ÇÈ", 0, "color", col2)
	end
end



@TAåå›ägëÂó¶
--track0:ägëÂó¶,-1000,1000,0
--track1:ä‘äu,-100,100,1,1
--dialog:0à»â∫Ç≈îÒï\é¶/chk,local flow=0;
--check0:îΩì],0

local rev = obj.check0
local tzoom, div = obj.track0, obj.track1
local zoom = obj.getvalue("zoom")
local n, m = obj.index, obj.num

local function checkflow(n)
	if flow==1 and n<=0 then
		return 0
	end
	return n
end

if div<0 then
	rev = not(rev)
end
if rev then
	tzoom = -tzoom
end

if m==0 or m==1 or div==0 then
	obj.zoom = checkflow((zoom+tzoom)/100)
elseif div>0 then
	local p = math.floor(n/div)+1
	if p%2==1 then
		obj.zoom = checkflow((zoom+tzoom)/100)
	elseif p%2==0 then
		obj.zoom = checkflow((zoom-tzoom)/100)
	end
elseif div<0 then
	local p = math.floor((m-n)/div)+1
	if p%2==1 then
		obj.zoom = checkflow((zoom+tzoom)/100)
	elseif p%2==0 then
		obj.zoom = checkflow((zoom-tzoom)/100)
	end
end
