@ゴミノイズ
--track0:閾値,0,100,90
--track1:サイズ,0,200,50
--track2:変化速度,0,500,50
--track3:タイプ,1,6,1,1
--dialog:色/col,color="0xffffff";シード,seed=0;強く/chk,mode=1;L基準輝度,lumThreshold=2048;Lぼかし,lumBlur=512;
local threshold = obj.track0
local size = obj.track1/10
local change = obj.track2
local type = obj.track3 - 1

obj.effect("単色化", "強さ", 100, "輝度を保持する", 0, "color", 0xffffff)
obj.effect("ノイズ",
	"変化速度", change,
	"周期X", size,
	"周期Y", size,
	"しきい値", threshold,
	"type", type,
	"mode", mode,
	"seed", seed
)
if mode==1 then
	obj.effect("ルミナンスキー", "基準輝度", lumThreshold, "ぼかし", lumBlur)
	obj.effect("単色化", "強さ", 100, "輝度を保持する", 0, "color", color)
end


@流れるノイズ
--track0:閾値,0,100,60
--track1:サイズ,0,200,2
--track2:速度,-500,500,10
--track3:タイプ,1,6,1,1
--dialog:色/col,color="0xffffff";変化速度,change=0;シード,seed=0;強く/chk,mode=1;L基準輝度,lumThreshold=1000;Lぼかし,lumBlur=256;

local threshold = obj.track0
local sizeX, sizeY = obj.track1/100, obj.track1
local speed = obj.track2
local type = obj.track3 - 1

obj.effect("単色化", "強さ", 100, "輝度を保持する", 0, "color", 0xffffff)
obj.effect("ノイズ",
	"変化速度", change,
	"速度X", speed,
	"速度Y", 0,
	"周期X", sizeX,
	"周期Y", sizeY,
	"しきい値", threshold,
	"type", type,
	"mode", mode,
	"seed", seed
)
if mode==1 then
	obj.effect("ルミナンスキー", "基準輝度", lumThreshold, "ぼかし", lumBlur)
	obj.effect("単色化", "強さ", 100, "輝度を保持する", 0, "color", color)
end


@透明度二値化
--track0:基準1,0,255,85,1
--track1:基準2,0,255,170,1
--track2:単純化,2,3,2,1
--check0:透明度を百分率で表す,0
--dialog:目標透明度,toalpha=128;2つの平均値を使う/chk,modeAverage=1;

local m = require("S_Mosaic_Module")
local data, w, h = obj.getpixeldata()
local alpha, alpha2 = obj.track0, obj.track1

if obj.check0 then
	if alpha>100 then
		alpha = 100
	end
	if alpha2>100 then
		alpha2 = 100
	end
	if toalpha>100 then
		toalpha = 100
	end

	alpha = alpha * 2.55
	alpha2 = alpha2 * 2.55
	toalpha = toalpha * 2.55
end

if obj.track2==2 then
	m.alpha_bin(data, w, h, 0, alpha)
elseif obj.track2==3 then
	if modeAverage==1 then
		toalpha=nil
	end
	m.alpha_bin(data, w, h, 1, alpha, alpha2, toalpha)
end
obj.putpixeldata(data)



@透明度単色化
--track0:下限,0,255,85,1
--track1:上限,0,255,170,1
--track2:強さ,0,100,100,1
--track3:明度保持,0,1,1,1
--check0:透明度を百分率で表す,0
--dialog:色/col,color="0xffffff";
local m = require("S_Mosaic_Module")
local data, w, h = obj.getpixeldata()
local alpha, alpha2 = obj.track0, obj.track1

if obj.check0 then
	if alpha>100 then
		alpha = 100
	end
	if alpha2>100 then
		alpha2 = 100
	end

	alpha = alpha * 2.55
	alpha2 = alpha2 * 2.55
end

m.alpha_color(data, w, h, alpha, alpha2, tonumber(color), obj.track2, obj.track3)
obj.putpixeldata(data)


@モザイク
--track0:サイズX,0,255,16,1
--track1:サイズY,0,255,16,1

--track3:計算方法,1,4,1,1

local m = require("S_Mosaic_Module")
local data, w, h = obj.getpixeldata()

m.mosaic(data, w, h, obj.track0, obj.track1, obj.track3-1)
obj.putpixeldata(data)


@ランダムモザイク
--track0:最小Xｻｲｽﾞ,0,255,8,1
--track1:最大Xｻｲｽﾞ,0,255,16,1
--track2:最小Yｻｲｽﾞ,0,255,8,1
--track3:最大Yｻｲｽﾞ,0,255,16,1
--dialog:シード,seed=0;

local m = require("S_Mosaic_Module")
local data, w, h = obj.getpixeldata()

m.rnd_mosaic(data, w, h, obj.track0, obj.track1, obj.track2, obj.track3, seed, seed+1)
obj.putpixeldata(data)

@タイル
--track0:サイズX,0,255,16,1
--track1:サイズY,0,255,16,1
--track3:計算方法,1,5,1,1
--dialog:色1/col,color1="0x000000";色2/col,color2=0xffffff;
local m = require("S_Mosaic_Module")
local data, w, h = obj.getpixeldata()

m.make_tile(data, w, h, obj.track0, obj.track1, color1, color2, obj.track3-1)
obj.putpixeldata(data)
